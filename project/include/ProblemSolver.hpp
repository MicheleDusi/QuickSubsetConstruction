/*
 * Michele Dusi, Gianfranco Lamperti
 * Quick Subset Construction
 * 
 * ProblemSolver.hpp
 *
 * This module manages all the procedures that solve a problem.
 * The problem is represented by a Problem object, and it's generated by a ProblemGenerator object.
 * The Problem instance is passed to the ProblemSolver, which will solve it while testing the determinization algorithm.
 */

#ifndef INCLUDE_PROBLEMSOLVER_HPP_
#define INCLUDE_PROBLEMSOLVER_HPP_

#include <vector>

#include "DeterminizationAlgorithm.hpp"
#include "ProblemGenerator.hpp"
#include "ResultCollector.hpp"

namespace quicksc {

	class ProblemSolver {
	private:
		ProblemGenerator* generator;		// The problem generator
		ResultCollector* collector;			// Archive of results of the tests

		const vector<DeterminizationAlgorithm*>& algorithms;	// Reference to the list of algorithms to test
		DeterminizationAlgorithm* benchmark_algorithm_pointer;	// Reference to the benchmark algorithm (needed to form the results)

	public:
		ProblemSolver(Configurations* configurations, const vector<DeterminizationAlgorithm*>& algorithms);
		~ProblemSolver();

		ResultCollector* getResultCollector();

		void solve(Problem* problem);
		void solve(DeterminizationProblem* problem);
		void solve();
		void solveSeries(unsigned int number);
	};

} /* namespace quicksc */

#endif /* INCLUDE_PROBLEMSOLVER_HPP_ */
